# Написати програму, яка обробляє дані про день.
# У програмі визначити клас Date, в якому забезпечити  наявність обов'язкових атрибутів-даних:
# рік, місяць, день та обов’язкових атрибутів-методів: метод для ініціалізації об’єкту,
# методи для формування рядка з інформацією про об’єкт.
# Програма повинна надавати наступну функціональність:
# •	Обрахувати, скільки повних років виповнилося користувачеві. Рахувати беручи до уваги лише поточний рік
# та рік народження людини. Місяці та дні не враховувати.
# •	Обрахувати скільки днів і місяців залишилося до Нового року. Рахувати, при умові, що кількість днів
# в кожному місяці однакова і дорівнює 30.

# На іспиті буде схожа задача, але лише одна умова до неї!


# Оголошення класу
class Date:
    # метод для ініціалізації екземпляру класу (об'єкту), (конструктор __init__).
    # В аргументи передаємо значення для змінних екземпляру.
    def __init__(self, year, month, day):
        # заводимо змінні для екземпялру класу
        self.year = year                                # поточний рік
        self.month = month                              # поточний місяць
        self.day = day                                  # поточний день
        self.age = 0                                    # кількість років, що виповнилося (обраховується нижче)
        self.remaining_days = {'month': 0, 'days': 0}   # Словник. Кількість днів і місяців до НР (обраховується нижче)

    # метод, який забезпечує коректне виведення в print() інформації про екземпляр
    def __repr__(self):
        return f'Today is {self.year}.{self.month}.{self.day}. Your age - {self.age} year \n\
Remaining days for New Year - {self.remaining_days}'

    # метод екземпляру (про це свідчить змінна self в аргументах методу)
    # метод отримує рік народження людини (змінна у) і обраховує і повертає скільки років виповнилося
    def count_age(self, birthday_year):
        self.age = self.year - birthday_year
        return self.age

    # метод екземпляру (про це свідчить змінна self в аргументах методу)
    # у словник по ключу month записується кількість днів до НР
    # по ключу days - кількість днів до НР
    def count_remaining_days(self):
        self.remaining_days['month'] = 12 - self.month
        self.remaining_days['days'] = 30 - self.day
        return self.remaining_days


# створення списку об'єктів дат
# Викликається клас Date, автоматично відпрацьовує метод __init__
# і в цей метод передаються  факутичні значення для формальних параметрів year, month, day
date_obj = [Date(2020, 5, 19),
            Date(2020, 12, 20),
            Date(2015, 3, 30),
            Date(2018, 1, 2)]

# запрошуємо користувача ввести свій рік народження
y = int(input('Enter your birthday year: '))

# визначення скільки повних років виповнилося користувачеві
# циклом проходимось по списку дат і для кожного об'єкту
# викликаємо метод, що обраховує скільки повних років виповнилося користувачеві
for d in date_obj:
    d.count_age(y)

# визначення скільки днів і місяців залишилося до Нового року
# циклом проходимось по списку дат і для кожного об'єкту
# викликаємо метод, що обраховує скільки днів і місяців залишилося до Нового року
for d in date_obj:
    d.count_remaining_days()

# для зручного виведення "в стовпчик" відсортованої інформації про кожного співробітника
print('\n'.join(map(str, date_obj)))
